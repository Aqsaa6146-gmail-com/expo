{"version":3,"file":"LinkWithPreview.js","sourceRoot":"","sources":["../../src/link/LinkWithPreview.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\n\nimport React, {\n  createContext,\n  isValidElement,\n  use,\n  useEffect,\n  useRef,\n  useState,\n  type ComponentType,\n  type PropsWithChildren,\n  type ReactElement,\n} from 'react';\n\nimport { useRouter } from '../hooks';\nimport { BaseExpoRouterLink } from './BaseExpoRouterLink';\nimport { HrefPreview } from './preview/HrefPreview';\nimport { useLinkPreviewContext } from './preview/LinkPreviewContext';\nimport {\n  LinkPreviewNativeActionView,\n  LinkPreviewNativePreviewView,\n  LinkPreviewNativeTriggerView,\n  LinkPreviewNativeView,\n} from './preview/native';\nimport { useScreenPreload } from './preview/useScreenPreload';\nimport { LinkProps } from './useLinkHooks';\nimport { shouldLinkExternally } from '../utils/url';\nimport { useIsPreview } from './preview/PreviewRouteContext';\nimport { Slot } from '../ui/Slot';\n\nconst InternalLinkPreviewContext = createContext<\n  { isVisible: boolean; href: LinkProps['href'] } | undefined\n>(undefined);\n\nexport function LinkWithPreview({ experimentalPreview, children, ...rest }: LinkProps) {\n  const router = useRouter();\n  const { setIsPreviewOpen } = useLinkPreviewContext();\n  const [isCurrentPreviewOpen, setIsCurrenPreviewOpen] = useState(false);\n\n  const hrefWithoutQuery = String(rest.href).split('?')[0];\n  const prevHrefWithoutQuery = useRef(hrefWithoutQuery);\n\n  useEffect(() => {\n    if (isCurrentPreviewOpen) {\n      if (prevHrefWithoutQuery.current !== hrefWithoutQuery) {\n        throw new Error(\n          'Link does not support changing the href prop after the preview has been opened. Please ensure that the href prop is stable and does not change between renders.'\n        );\n      }\n    } else {\n      prevHrefWithoutQuery.current = hrefWithoutQuery;\n    }\n  }, [hrefWithoutQuery]);\n\n  const { preload, updateNavigationKey, navigationKey } = useScreenPreload(hrefWithoutQuery);\n\n  useEffect(() => {\n    if (shouldLinkExternally(String(rest.href))) {\n      console.warn('External links previews are not supported');\n    }\n    if (rest.replace) {\n      console.warn('Using replace links with preview is not supported');\n    }\n  }, [rest.href, rest.replace]);\n\n  const triggerElement = React.useMemo(\n    () => getFirstChildOfType(children, LinkTrigger),\n    [children]\n  );\n  const menuElement = React.useMemo(() => getFirstChildOfType(children, LinkMenu), [children]);\n  const previewElement = React.useMemo(\n    () => getFirstChildOfType(children, LinkPreview),\n    [children]\n  );\n\n  if (previewElement && !triggerElement) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(\n        'When you use Link.Preview, you must use Link.Trigger to specify the trigger element.'\n      );\n    } else {\n      console.warn(\n        'When you use Link.Preview, you must use Link.Trigger to specify the trigger element.'\n      );\n    }\n  }\n\n  const trigger = React.useMemo(\n    () => triggerElement ?? <LinkTrigger>{children}</LinkTrigger>,\n    [triggerElement, children]\n  );\n\n  const actionsHandlers = React.useMemo(\n    () => convertLinkMenuItemsToActionsHandlers(ensureArray(menuElement?.props.children)),\n    [menuElement]\n  );\n  const preview = React.useMemo(\n    () => previewElement ?? <LinkPreview />,\n    [previewElement, rest.href]\n  );\n\n  if (shouldLinkExternally(String(rest.href)) || rest.replace) {\n    return <BaseExpoRouterLink children={children} {...rest} />;\n  }\n\n  return (\n    <LinkPreviewNativeView\n      nextScreenId={navigationKey}\n      onActionSelected={({ nativeEvent: { id } }) => {\n        actionsHandlers[id]?.();\n      }}\n      onWillPreviewOpen={() => {\n        preload();\n        setIsPreviewOpen(true);\n        setIsCurrenPreviewOpen(true);\n      }}\n      onDidPreviewOpen={() => {\n        updateNavigationKey();\n      }}\n      onPreviewWillClose={() => {}}\n      onPreviewDidClose={() => {\n        setIsPreviewOpen(false);\n        setIsCurrenPreviewOpen(false);\n      }}\n      onPreviewTapped={() => {\n        router.navigate(rest.href, { __internal__PreviewKey: navigationKey });\n      }}>\n      <InternalLinkPreviewContext value={{ isVisible: isCurrentPreviewOpen, href: rest.href }}>\n        <LinkPreviewNativeTriggerView>\n          <BaseExpoRouterLink {...rest} children={trigger} ref={rest.ref} />\n        </LinkPreviewNativeTriggerView>\n        {preview}\n        {menuElement}\n      </InternalLinkPreviewContext>\n    </LinkPreviewNativeView>\n  );\n}\n\nfunction convertLinkMenuItemsToActionsHandlers(\n  items: React.ReactElement<LinkMenuItemProps, string | React.JSXElementConstructor<any>>[]\n) {\n  return items\n    .filter((item) => isValidElement(item) && item.type === LinkMenuItem)\n    .reduce(\n      (acc, item) => ({\n        ...acc,\n        [item.props.title]: item.props.onPress,\n      }),\n      {} as Record<string, () => void>\n    );\n}\n\nfunction ensureArray<T>(maybeArray: T | T[] | undefined): T[] {\n  if (maybeArray) {\n    if (Array.isArray(maybeArray)) {\n      return maybeArray;\n    }\n    return [maybeArray];\n  }\n  return [];\n}\n\nfunction getFirstChildOfType<PropsT>(\n  children: React.ReactNode | React.ReactNode[],\n  type: (props: PropsT) => unknown\n) {\n  return React.Children.toArray(children).find(\n    (child): child is ReactElement<PropsT> => isValidElement(child) && child.type === type\n  );\n}\n\ninterface LinkMenuItemProps {\n  title: string;\n  onPress: () => void;\n}\n\nexport function LinkMenuItem(_: LinkMenuItemProps) {\n  return null;\n}\ninterface LinkMenuProps {\n  children: ReactElement<LinkMenuItemProps> | ReactElement<LinkMenuItemProps>[];\n}\n\nexport function LinkMenu({ children }: LinkMenuProps) {\n  if (useIsPreview() || !use(InternalLinkPreviewContext)) {\n    return null;\n  }\n  return React.Children.map(children, (child) => {\n    if (isValidElement(child) && child.type === LinkMenuItem) {\n      return <LinkPreviewNativeActionView title={child.props.title} id={child.props.title} />;\n    }\n    return null;\n  });\n}\n\ninterface LinkPreviewProps {\n  width?: number;\n  height?: number;\n  children?: React.ReactNode;\n  Component?: ComponentType<{ isVisible: boolean }>;\n}\n\nexport function LinkPreview({ children, Component, width, height }: LinkPreviewProps) {\n  const internalPreviewContext = use(InternalLinkPreviewContext);\n  if (useIsPreview() || !internalPreviewContext) {\n    return null;\n  }\n  const { isVisible, href } = internalPreviewContext;\n  const contentSize = {\n    width: width ?? 0,\n    height: height ?? 0,\n  };\n  let content: React.ReactNode;\n  if (Component) {\n    content = <Component isVisible={isVisible} />;\n  } else if (children) {\n    content = isVisible ? children : null;\n  } else {\n    content = isVisible ? <HrefPreview href={href} /> : null;\n  }\n\n  return (\n    <LinkPreviewNativePreviewView\n      style={{\n        /* Setting default background here, so that the preview is not transparent */\n        backgroundColor: '#fff',\n      }}\n      preferredContentSize={contentSize}>\n      {content}\n    </LinkPreviewNativePreviewView>\n  );\n}\n\nexport function LinkTrigger(props: PropsWithChildren) {\n  if (React.Children.toArray(props.children).every((child) => !isValidElement(child))) {\n    return props.children;\n  }\n  return <Slot {...props} />;\n}\n"]}